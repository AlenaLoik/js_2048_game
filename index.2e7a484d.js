const t=new class{constructor(t=null){this.defaultState=t?JSON.parse(JSON.stringify(t)):null,this.board=t||[,,,,].fill(0).map(()=>[,,,,].fill(0)),this.score=0,this.status="idle"}moveLeft(){this.move(t=>t.filter(t=>t).concat(Array(4-t.filter(t=>t).length).fill(0)))}moveRight(){this.move(t=>Array(4-t.filter(t=>t).length).fill(0).concat(t.filter(t=>t)))}moveUp(){this.transposeAndMove("up")}moveDown(){this.transposeAndMove("down")}getScore(){return this.score}getState(){return this.board}getStatus(){return this.status}start(){"playing"!==this.status&&(this.status="playing"),this.spawnTile(),this.spawnTile()}restart(){let t=[,,,,].fill(0).map(()=>[,,,,].fill(0));this.board=this.defaultState?JSON.parse(JSON.stringify(this.defaultState)):t,this.score=0,this.status="idle"}move(t){if("playing"!==this.status)return;let e=JSON.stringify(this.board);this.board=this.board.map(t),this.mergeTiles(t),JSON.stringify(this.board)!==e&&(this.spawnTile(),this.checkGameState())}mergeTiles(t){this.board=this.board.map(e=>{for(let t=0;t<e.length-1;t++)e[t]===e[t+1]&&0!==e[t]&&(e[t]*=2,e[t+1]=0,this.score+=e[t]);return t(e)})}spawnTile(){let t=[];if(this.board.forEach((e,s)=>e.forEach((e,r)=>{0===e&&t.push({rowIndex:s,colIndex:r})})),t.length>0){let{rowIndex:e,colIndex:s}=t[Math.floor(Math.random()*t.length)];this.board[e][s]=.9>Math.random()?2:4}}checkGameState(){this.board.flat().includes(2048)?this.status="win":this.hasMoves()||(this.status="lose"),this.updateUI()}hasMoves(){if(this.board.flat().includes(0))return!0;for(let t=0;t<4;t++)for(let e=0;e<4;e++)if(t<3&&this.board[t][e]===this.board[t+1][e]||e<3&&this.board[t][e]===this.board[t][e+1])return!0;return!1}transposeAndMove(t){if("playing"!==this.status)return;let e=JSON.stringify(this.board),s=this.board[0].map((t,e)=>this.board.map(t=>t[e])).map(e=>"up"===t?this.mergeAndSlide(e):this.mergeAndSlide(e.reverse()).reverse());this.board=s[0].map((t,e)=>s.map(t=>t[e])),JSON.stringify(this.board)!==e&&(this.spawnTile(),this.checkGameState())}mergeAndSlide(t){let e=t.filter(t=>0!==t),s=[],r=0;for(;r<e.length;)e[r]===e[r+1]?(s.push(2*e[r]),this.score+=2*e[r],r+=2):(s.push(e[r]),r++);return s.concat(Array(4-s.length).fill(0))}updateUI(){}};document.addEventListener("DOMContentLoaded",()=>{let e=document.querySelector(".button.start"),s=document.querySelector(".game-score"),r=document.querySelectorAll(".field-cell"),a=document.querySelector(".message-lose"),i=document.querySelector(".message-win"),o=document.querySelector(".message-start"),l=()=>{let e=t.getState(),l=t.getScore(),n=t.getStatus();r.forEach((t,s)=>{let r=e[Math.floor(s/4)][s%4];t.textContent=0===r?"":r,t.className=`field-cell ${r>0?`field-cell--${r}`:""}`}),s.textContent=l,a.classList.toggle("hidden","lose"!==n),i.classList.toggle("hidden","win"!==n),o.classList.toggle("hidden","idle"!==n)};e.addEventListener("click",()=>{"idle"===t.getStatus()?(e.textContent="Restart",e.classList.remove("start"),e.classList.add("restart"),t.start()):(e.textContent="Start",e.classList.remove("restart"),e.classList.add("start"),t.restart()),l()}),document.addEventListener("keydown",e=>{if("playing"===t.getStatus()){switch(e.key){case"ArrowLeft":t.moveLeft();break;case"ArrowRight":t.moveRight();break;case"ArrowUp":t.moveUp();break;case"ArrowDown":t.moveDown();break;default:return}l()}}),l()});
//# sourceMappingURL=index.2e7a484d.js.map
